buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.org.spongepowered:spongegradle:0.9.0"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.plugin"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// We use the version format MCVERSION-MAJOR.MINOR.PATCH
version = modMinecraftVersion + "-" + modVersion
group = modGroup
archivesBaseName = modFileName

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: modMcpMappingsChannel, version: modMcpMappingsVersion

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    ivy {
        url "https://download.nodecdn.net/containers/reforged/server/release"
        layout "pattern", {
            artifact "[revision]/[artifact].[ext]"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:" + modMinecraftVersion + "-" + modForgeVersion
    implementation "org.spongepowered:spongeapi:7.3.0"
    implementation "pixelmon:Pixelmon-1.12.2-8.1.2-server:8.1.2"
    implementation 'com.github.rojo8399:PlaceholderAPI:4.5.1'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : modId,
                "Specification-Vendor"    : modGroup,
                "Specification-Version"   : "1.0", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : modGroup,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
    // This will ensure that this task is redone when the versions change.
    inputs.property 'modVersion', modVersion

    // Replace stuff in mods.toml, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mods.toml'

        // Replace version
        expand 'version': modVersion
    }

    // Copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mods.toml'
    }
}

// Create Sources Jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
build.dependsOn sourcesJar

//// Create Javadoc Jar
//task javadocJar(type: Jar, dependsOn: javadoc) {
//	classifier = 'javadoc'
//	from javadoc.destinationDir
//}
//build.dependsOn javadocJar

artifacts {
    archives sourcesJar
//	archives javadocJar
}
